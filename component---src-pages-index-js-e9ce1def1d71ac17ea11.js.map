{"version":3,"file":"component---src-pages-index-js-e9ce1def1d71ac17ea11.js","mappings":"qMAGA,MAAMA,EAAe,CACnBC,WAAY,SAGRC,EAAY,CAChBC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,SAGHC,EAAiB,CACrBC,UAAW,OACXC,OAAQ,EACRC,QAAS,EACTC,UAAW,SAGPC,EAAgB,CACpBC,QAAS,eACTH,QAAS,IAGLI,EAAkB,CACtBR,MAAO,OACPS,SAAU,IACVN,OAAQ,OACRO,UAAW,KAGE,SAASC,EAAO,GAAe,IAAf,SAAEC,GAAU,EACzC,OACE,uBAAKC,MAAOnB,GACV,uBAAKmB,MAAOjB,GACV,sBAAIiB,MAAOZ,GACT,0BACE,gBAAC,KAAI,CACHa,GAAG,IACHD,MAAOP,GACR,WAKP,wBAAMO,MAAOL,GAAkBI,GAGrC,C,sGC9Ce,SAASG,EAAS,GAAW,IAAX,KAAEC,GAAM,EACvC,MAAMC,EAAQD,EAAKE,YAAYC,MAC/B,OACE,gBAAC,IAAM,KACL,0BAAI,aACJ,0BACGF,EAAMG,KAAKC,GACV,sBAAIC,IAAKD,EAAKE,YAAYC,IACxB,gBAAC,KAAI,CAACV,GAAIO,EAAKI,MAAOJ,EAAKI,UAMvC,C","sources":["webpack://inclusive-design-scenarios/./src/components/layout.js","webpack://inclusive-design-scenarios/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst fontsWrapper = {\n  fontFamily: \"Inter\"\n}\n\nconst navStyles = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100vw'\n}\n\nconst navItemsStyles = {\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  textAlign: 'right'\n}\n\nconst navItemStyles = {\n  display: 'inline-block',\n  padding: 12\n}\n\nconst containerStyles = {\n  width: '90vw',\n  maxWidth: 720,\n  margin: \"auto\",\n  marginTop: 100,\n}\n\nexport default function Layout({ children }) {\n  return (\n    <div style={fontsWrapper}>\n      <nav style={navStyles}>\n        <ul style={navItemsStyles}>\n          <li>\n            <Link\n              to=\"/\"\n              style={navItemStyles}\n            >Home</Link>\n          </li>\n          {/*<li><Link to=\"#\">Random card</Link></li>*/}\n        </ul>\n      </nav>\n      <main style={containerStyles}>{children}</main>\n    </div>\n  );\n}\n\n","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from '../components/layout'\n\nexport default function HomePage({ data }) {\n  const cards = data.allSitePage.nodes\n  return (\n    <Layout>\n      <h1>All Cards</h1>\n      <ul>\n        {cards.map((item) => (\n          <li key={item.pageContext.id}>\n            <Link to={item.path}>{item.path}</Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query AllCardPages {\n    allSitePage(filter: {path: {regex: \"/cards/\"}}) {\n      nodes {\n        id\n        path\n        pageContext\n      }\n    }\n  }\n`\n\n\n"],"names":["fontsWrapper","fontFamily","navStyles","position","top","left","width","navItemsStyles","listStyle","margin","padding","textAlign","navItemStyles","display","containerStyles","maxWidth","marginTop","Layout","children","style","to","HomePage","data","cards","allSitePage","nodes","map","item","key","pageContext","id","path"],"sourceRoot":""}